#!/bin/sh

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Redirect output to stderr.
#exec 1>&2

# enable user input
exec < /dev/tty


RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color


#####################################
#  Check for console.log instances  #
#####################################

for FILE in `git diff-index --cached --name-status $against -- | cut -c3-` ; do
    # Check if the file contains 'console.log'
    if ( git diff --cached $FILE | grep ^+ | grep -q 'console\.[clear|dir|log|info|warn|error]' )
    then
        printf "${CYAN}${FILE}${NC} contains ${RED}console${NC} statement!\n\n"
        git diff --cached $FILE
        exit 1
    fi
done


#####################################
#   Check for debugger instances    #
#####################################

for FILE in `git diff-index --cached --name-status $against -- | cut -c3-` ; do
    # Check if the file contains 'debugger'
    if ( git diff --cached $FILE | grep ^+ | grep -q 'debugger' )
    then
        printf "${CYAN}${FILE}${NC} contains ${RED}debugger${NC}!\n\n"
        git diff --cached $FILE
        exit 1
    fi
done

#####################################
#     Check for merge markers       #
#####################################
function __get_commit_files {
    echo $(git diff-index --name-only --diff-filter=ACM --cached HEAD --)
}

function __is_binary {
    P=$(printf '%s\t-\t' -)
    T=$(git diff --no-index --numstat /dev/null "$1")

    case "$T" in "$P"*) return 0 ;; esac

    return 1
}

function __print_fail {
    echo -e "  $ICON_CROSS $1"
}

MERGE_FILES=""

for FILE in $(__get_commit_files); do
    if egrep -rls "^<<<<<<< |^>>>>>>> $" "$FILE" > /dev/null; then
        if ! __is_binary "$FILE"; then
            MERGE_FILES="$MERGE_FILES\n      $FILE"
        fi
    fi
done

if [ -z "$MERGE_FILES" ]; then
    exit 0
else
    __print_fail "Merge markers found in:$MERGE_FILES"
    exit 1
fi

exit